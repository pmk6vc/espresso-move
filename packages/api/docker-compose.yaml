version: "3"

services:
  postgres-db:
    image: "postgres:15-alpine"
    container_name: pgdb
    ports:
      - 5432:${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file: .environment/db.env

  firebase-emulator:
    build:
      context: .
      dockerfile: FirebaseEmulators.dockerfile
      args:
        - GCP_TEST_PROJECT_ID=$GCP_TEST_PROJECT_ID
    ports:
      - "9099:9099"
      - "4000:4000"

  app:
    image: express-movers-docker:latest
    build:
      context: ../../
      dockerfile: ./packages/api/Dockerfile
      args:
        - SERVICE_PORT=$SERVICE_PORT
    ports:
      - 3000:${SERVICE_PORT}
    container_name: express_app
    depends_on:
      postgres-db:
        condition: service_healthy
      firebase-emulator:
        condition: service_started
    environment:
      - NODE_ENV=development
      - NODE_CONFIG_ENV=local-docker-compose
      - DB_NAME=${POSTGRES_DB}
      - DB_HOST=postgres-db
      - DB_PORT=${POSTGRES_PORT}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - GCP_PROJECT_ID=${GCP_TEST_PROJECT_ID}
      - FIREBASE_AUTH_EMULATOR_HOST=firebase-emulator:9099
    env_file:
      - .environment/app.env
      - .environment/db.env
